# .zshrc

# Set up completions
fpath=(~/.config/zsh/completion $fpath)
autoload compinit
compinit

# Use bash completions
autoload bashcompinit
bashcompinit

# Fix keys and shortcuts
bindkey "^[[3~" delete-char
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# Set up distrobox completions
source /usr/share/bash-completion/completions/distrobox
source /usr/share/bash-completion/completions/distrobox-assemble
source /usr/share/bash-completion/completions/distrobox-create
source /usr/share/bash-completion/completions/distrobox-enter
source /usr/share/bash-completion/completions/distrobox-ephemeral
source /usr/share/bash-completion/completions/distrobox-generate-entry
source /usr/share/bash-completion/completions/distrobox-list
source /usr/share/bash-completion/completions/distrobox-rm
source /usr/share/bash-completion/completions/distrobox-stop
source /usr/share/bash-completion/completions/distrobox-upgrade

# Integrate neovim
export EDITOR="$HOME/.local/share/aquaproj-aqua/bin/nvim"
export VISUAL="$HOME/.local/share/aquaproj-aqua/bin/nvim"
if command -v nvim &> /dev/null; then
  alias vim=nvim
fi

# Integrate marktext
function marktext {
  flatpak run com.github.marktext.marktext "$@"
}
compdef _files marktext

# Integrate wezterm
function wezterm {
  flatpak run org.wezfurlong.wezterm "$@"
}

# Integrate aqua
# FIXME: put env vars in .zshenv
export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"
export AQUA_GLOBAL_CONFIG=${AQUA_GLOBAL_CONFIG:-}:${XDG_CONFIG_HOME:-$HOME/.config}/aquaproj-aqua/aqua.yaml
if command -v aqua &> /dev/null; then
  aqua i -a
  source <(aqua completion zsh)
fi

# Integrate tere
if command -v tere &> /dev/null; then
  tere() {
    local result=$($HOME/.local/share/aquaproj-aqua/bin/tere --mouse=on "$@")
    [ -n "$result" ] && cd -- "$result"
  }
fi

# Integrate lf
if command -v lf &> /dev/null; then
  function lfcd {
    cd "$($HOME/.local/share/aquaproj-aqua/bin/lf -print-last-dir "$@")"
  }
fi

# Enable starship
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

# Enable direnv
if command -v direnv &> /dev/null; then
  eval "$(direnv hook zsh)"
fi

# Enable atuin
if command -v atuin &> /dev/null; then
  eval "$(atuin init zsh)"
fi

# Autostart zellij (note that this hands over execution to zellij, so nothing else should be added
# after this section)
if command -v zellij &> /dev/null; then
  if [ -z "${ZELLIJ}" ]; then
    zellij_sessions=$(zellij list-sessions)
    num_sessions=$(echo "${zellij_sessions}" | wc -l)
    if [ "${num_sessions}" -ge 1 ]; then
      echo
      echo "  Attach to a Zellij session?"
      chosen_session=$(echo "(don't-attach)\n(new-session)\n${zellij_sessions}" | gum choose | sed 's~ .*$~~')
      if [[ "${chosen_session}" == "(new-session)" ]]; then
        zellij attach -c "$(gum input --placeholder "Name of new session")"
      elif [ "${chosen_session}" != "(don't-attach)" ]; then
        zellij attach "${chosen_session}"
      fi
    elif gum confirm "Start a new Zellij session?"; then
      zellij attach -c
    fi
  fi
fi
